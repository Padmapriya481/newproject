# CODSOFT Python Internship Tasks

## 📁 Task 1: To-Do List (Command Line)
tasks = []

def show_tasks():
    print("\nTo-Do List:")
    for idx, task in enumerate(tasks, 1):
        print(f"{idx}. {task}")

def add_task():
    task = input("Enter a new task: ")
    tasks.append(task)
    print("Task added.")

def delete_task():
    show_tasks()
    index = int(input("Enter task number to delete: ")) - 1
    if 0 <= index < len(tasks):
        tasks.pop(index)
        print("Task deleted.")
    else:
        print("Invalid number.")

while True:
    print("\n1. Add Task\n2. Show Tasks\n3. Delete Task\n4. Exit")
    choice = input("Choose an option: ")
    if choice == '1':
        add_task()
    elif choice == '2':
        show_tasks()
    elif choice == '3':
        delete_task()
    elif choice == '4':
        break
    else:
        print("Invalid choice.")


# -------------------------------------------
# 📁 Task 2: Simple Calculator

def calculator():
    num1 = float(input("Enter first number: "))
    op = input("Enter operation (+, -, *, /): ")
    num2 = float(input("Enter second number: "))
    
    if op == '+':
        print("Result:", num1 + num2)
    elif op == '-':
        print("Result:", num1 - num2)
    elif op == '*':
        print("Result:", num1 * num2)
    elif op == '/':
        print("Result:", num1 / num2 if num2 != 0 else "Cannot divide by zero")
    else:
        print("Invalid operation.")

# Uncomment to run
# calculator()


# -------------------------------------------
# 📁 Task 3: Password Generator

import random
import string

def generate_password(length):
    characters = string.ascii_letters + string.digits + string.punctuation
    password = ''.join(random.choice(characters) for _ in range(length))
    return password

# Uncomment to run
# length = int(input("Enter the desired password length: "))
# print("Generated Password:", generate_password(length))


# -------------------------------------------
# 📁 Task 4: Rock-Paper-Scissors Game

def rps_game():
    choices = ['rock', 'paper', 'scissors']
    user_score = 0
    computer_score = 0

    while True:
        user = input("Choose rock, paper, or scissors (or 'exit' to quit): ").lower()
        if user == 'exit':
            break
        if user not in choices:
            print("Invalid choice.")
            continue

        comp = random.choice(choices)
        print(f"Computer chose: {comp}")

        if user == comp:
            print("It's a tie!")
        elif (user == 'rock' and comp == 'scissors') or \
             (user == 'scissors' and comp == 'paper') or \
             (user == 'paper' and comp == 'rock'):
            print("You win!")
            user_score += 1
        else:
            print("Computer wins!")
            computer_score += 1

        print(f"Score => You: {user_score} | Computer: {computer_score}")

# Uncomment to run
# rps_game()


# -------------------------------------------
# 📁 Task 5: Contact Book

contacts = {}

def add_contact():
    name = input("Enter name: ")
    phone = input("Enter phone: ")
    email = input("Enter email: ")
    address = input("Enter address: ")
    contacts[name] = {'Phone': phone, 'Email': email, 'Address': address}
    print("Contact added.")

def view_contacts():
    for name, info in contacts.items():
        print(f"\nName: {name}\nPhone: {info['Phone']}\nEmail: {info['Email']}\nAddress: {info['Address']}")

def search_contact():
    search = input("Enter name to search: ")
    if search in contacts:
        print(contacts[search])
    else:
        print("Contact not found.")

def delete_contact():
    name = input("Enter name to delete: ")
    if name in contacts:
        del contacts[name]
        print("Contact deleted.")
    else:
        print("Contact not found.")

# Menu example (uncomment to use)
# while True:
#     print("\n1. Add\n2. View\n3. Search\n4. Delete\n5. Exit")
#     ch = input("Choose: ")
#     if ch == '1': add_contact()
#     elif ch == '2': view_contacts()
#     elif ch == '3': search_contact()
#     elif ch == '4': delete_contact()
#     elif ch == '5': break
#     else: print("Invalid choice.")
